#include "wishbone_master.h"
#include "wishbone_common.h"
#include "wishbone_syscon.h"
#include "wishbone_slave_reg.h"


declare wishbone_slave_reg_test simulation {

}

module wishbone_slave_reg_test {
	wishbone_syscon wb_syscon;
	wishbone_master wb_master0;
	wishbone_slave_reg wb_slave_reg0;
	reg r = 0;
	func_self tst();
	func_self nop();

	wb_master0.CLK_I = wb_syscon.CLK_O;
	wb_master0.RST_I = wb_syscon.RST_O;
	wb_slave_reg0.CLK_I = wb_syscon.CLK_O;
	wb_slave_reg0.RST_I = wb_syscon.RST_O;
	wb_slave_reg0.ADR_I = wb_master0.ADR_O;
	wb_slave_reg0.SEL_I = wb_master0.SEL_O;
	wb_slave_reg0.DAT_I = wb_master0.DAT_O;
	wb_master0.DAT_I = wb_slave_reg0.DAT_O;

	func wb_master0.CYC_O {
		wb_slave_reg0.CYC_I();
	}
	func wb_master0.STB_O {
		wb_slave_reg0.STB_I();
	}
	func wb_master0.WE_O {
		wb_slave_reg0.WE_I();
	}
	func wb_master0.LOCK_O {
		wb_slave_reg0.LOCK_I();
	}
	func wb_slave_reg0.ACK_O {
		wb_master0.ACK_I();
	}
	func wb_slave_reg0.STALL_O {
		wb_master0.STALL_I();
	}
	func wb_slave_reg0.ERR_O {
		wb_master0.ERR_I();
	}
	func wb_slave_reg0.RTY_O {
		wb_master0.RTY_I();
	}

	if(!r) {
		r := ~r;
		tst();
		wb_slave_reg0.reset();
	}

	func tst seq {
		_display("Test starts");
		nop();
		wb_master0.req_read(0x00000008, 0xff);
		nop();
		nop();
		nop();
		nop();
		wb_master0.req_write(0x00000008, 0xff, 0xffffffffffffffff);
		nop();
		nop();
		nop();
		nop();
		nop();
		wb_master0.req_read(0x00000008, 0xff);
		nop();
		nop();
		wb_master0.req_write(0x00000008, 0xff, 0xaaaaaaaaaaaaaaaa);
		while(wb_master0.req_stall) {
			nop();
		}
		wb_master0.req_read(0x00000008, 0xff);
		nop();
		nop();
		nop();
		nop();
		nop();
		_finish("Test finished");
	}
	func wb_master0.rsp_valid {
		reg test_id[3] = 0;
		any {
			test_id == 0: _display("Read test passed: %x", wb_master0.rsp_data);
			test_id == 1: _display("Write test passed");
			test_id == 2: _display("Read test passed: %x", wb_master0.rsp_data);
			test_id == 3: _display("Write test passed");
			test_id == 4: _display("Write->Read test passed: %x", wb_master0.rsp_data);
		}
		test_id++;
	}
}
