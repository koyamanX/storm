#include "ifetch_unit.h"
#include "icache.h"

module ifetch_unit {
	reg vpc[32];
	proc_name st0(vpc);
	func_self tlb_hit;
	wire va[32];
	wire pa[32];
	func_self v2p(va) : pa;
	reg st1_ppc[32];
	proc_name st1(st1_ppc);
	reg st2_ppc[32];
	reg st2_fetch_packet[64];
	proc_name st2(st2_ppc, st2_fetch_packet);
	func_self predict();
	func_self predict_taken();
	func_self predict_not_taken();
	icache ic;

	func reset {
		ic.reset();
	}
	func redirect {
		st0(newpc);
	}

	proc st0 {
		v2p(vpc);
		ic.req_cache_read(vpc);
		if(tlb_hit) {
			st1(pa);
		}
	}
	func v2p {
		tlb_hit();
		return va;
	}
	proc st1 {
		ic.req_cache_pa_valid(st1_ppc);
		if(ic.rsp_cache_hit) {
			st2(st1_ppc, ic.rsp_cache_data);
		} else {
			st0(vpc);
		}
	}
	proc st2 {
		predict();
		if(predict_not_taken) {
			st0(vpc+8);
		}
		push2({st2_ppc, st2_fetch_packet});
	}
	func predict {
		predict_not_taken();
	}

	WISHBONE_MASTER_IF(ic);
}
