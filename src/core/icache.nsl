#include "icache.h"
#include "wishbone_master.h"

module icache {
	mem icache_valid_array[128];
	mem icache_tag_array[128][20];
	mem icache_data_array[128][256];
	reg idle_icache_hit_valid = 0;
	reg idle_icache_hit_tag[20];
	reg idle_icache_hit_index[7];
	reg idle_icache_hit_data[256];
	proc_name idle(idle_icache_hit_valid, idle_icache_hit_tag, idle_icache_hit_index, idle_icache_hit_data);
	reg compare_tag_addr[32];
	reg compare_tag_icache_valid;
	reg compare_tag_icache_tag[20];
	reg compare_tag_icache_data[256];
	proc_name compare_tag(compare_tag_addr, compare_tag_icache_valid,
							compare_tag_icache_tag, compare_tag_icache_data);
	reg allocate_addr[32];
	reg allocate_req_cache_addr[32];
	proc_name allocate(allocate_addr, allocate_req_cache_addr);

	func reset {
		idle(0, 0, 0, 0);
	}
	proc idle {
		wire idle_tag[20];
		wire idle_index[7];
		wire idle_block_offset[2];
		wire idle_byte_offset[3];

		.{idle_tag, idle_index, idle_block_offset, idle_byte_offset} = req_cache_addr;
		any {
			req_cache_read: {
				if(idle_icache_hit_valid && (idle_icache_hit_tag == idle_tag) && (idle_icache_hit_index == idle_index)) {
					any {
						idle_block_offset == 0: rsp_cache_hit(idle_icache_hit_data[63:0]);
						idle_block_offset == 1: rsp_cache_hit(idle_icache_hit_data[127:64]);
						idle_block_offset == 2: rsp_cache_hit(idle_icache_hit_data[191:128]);
						idle_block_offset == 3: rsp_cache_hit(idle_icache_hit_data[255:192]);
					}
				} else {
					compare_tag(req_cache_addr, icache_valid_array[idle_index],
							icache_tag_array[idle_index], icache_data_array[idle_index]);
				}
			}
		}
	}
	proc compare_tag {
		wire compare_tag_tag[20];
		wire compare_tag_index[7];
		wire compare_tag_block_offset[2];
		wire compare_tag_byte_offset[3];

		.{compare_tag_tag, compare_tag_index, compare_tag_block_offset, compare_tag_byte_offset} = compare_tag_addr;

		if((compare_tag_tag == compare_tag_icache_tag) && compare_tag_icache_valid && (req_cache_read && (req_cache_addr == compare_tag_addr))) {
			any {
				compare_tag_block_offset == 0: rsp_cache_hit(compare_tag_icache_data[63:0]);
				compare_tag_block_offset == 1: rsp_cache_hit(compare_tag_icache_data[127:64]);
				compare_tag_block_offset == 2: rsp_cache_hit(compare_tag_icache_data[191:128]);
				compare_tag_block_offset == 3: rsp_cache_hit(compare_tag_icache_data[255:192]);
			}
			idle(compare_tag_icache_valid, compare_tag_tag, compare_tag_index, compare_tag_icache_data);
		} else if(req_cache_read) {
			allocate(req_cache_addr, req_cache_addr);
		} else {
			idle(idle_icache_hit_valid, idle_icache_hit_tag, idle_icache_hit_index, idle_icache_hit_data);
		}
	}
	proc allocate {
		reg allocate_count[2] = 0;
		wire allocate_tag[20];
		wire allocate_index[7];
		wire allocate_block_offset[2];
		wire allocate_byte_offset[3];
		wire allocate_hit_tag[20];
		wire allocate_hit_index[7];
		wire allocate_hit_block_offset[2];
		wire allocate_hit_byte_offset[3];
		mem allocate_data[4][64];
		state_name allocate_bus_req, allocate_bus_wait, allocate_done;

		.{allocate_tag, allocate_index, allocate_block_offset, allocate_byte_offset} = allocate_addr;
		.{allocate_hit_tag, allocate_hit_index, allocate_hit_block_offset, allocate_hit_byte_offset} = allocate_req_cache_addr;
		state allocate_bus_req {
			req_read(allocate_addr, 0xff);

			if(rsp_valid) {
				allocate_data[allocate_block_offset] := rsp_data;
				icache_tag_array[allocate_index] := allocate_tag;
				icache_valid_array[allocate_index] := 1;
				allocate_addr := allocate_addr + 8;
				if(allocate_count == 3) {
					allocate_count := 0;
					goto allocate_done;
				} else {
					allocate_count++;
				}
			} else {
				goto allocate_bus_wait;
			}
		}
		state allocate_bus_wait {
			if(rsp_valid) {
				allocate_data[allocate_block_offset] := rsp_data;
				icache_tag_array[allocate_index] := allocate_tag;
				icache_valid_array[allocate_index] := 1;
				allocate_addr := allocate_addr + 8;
				if(allocate_count == 3) {
					allocate_count := 0;
					goto allocate_done;
				} else {
					allocate_count++;
				}
				goto allocate_bus_req;
			}
		}
		state allocate_done {
			icache_data_array[allocate_hit_index] := {allocate_data[3], allocate_data[2], allocate_data[1], allocate_data[0]};
			goto allocate_bus_req;
			idle(1, allocate_hit_tag, allocate_hit_index, {allocate_data[3], allocate_data[2], allocate_data[1], allocate_data[0]});
		}
	}
}
