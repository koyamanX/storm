#include "load_store_unit.h"
#include "load_queue.h"
#include "wishbone_master.h"
#include "uops.h"

module load_store_unit {
	load_queue ldq;
	wishbone_master wb_master_if;
	wire load_A[32];
	wire load_uOp[7];
	wire load_RobId[LOG2_ROB_NUM_OF_ENTRIES];
	func_self load(load_A, load_uOp, load_RobId);

	func issue0 {
		/* TLB access, always va == pa for now (TLB hit) */
		if(issue0_uOp == uOPS_LOAD_WORD) {
			load(issue0_A, issue0_uOp, issue0_RobId);
		}
	}
	func issue1 {
		/* TLB access, always va == pa for now (TLB hit) */
		if(issue1_uOp == uOPS_LOAD_WORD) {
			load(issue1_A, issue1_uOp, issue1_RobId);
		}
	}
	func load {
		ldq.push(load_A, load_uOp, load_RobId);	
	}
	if(ldq.full) {
		full();
	}
	func flush {
		ldq.flush();
	}
	func CDB0 {
	}
	func CDB1 {
	}
	func CDB2 {
	}
	func CDB3 {
	}
	func commit {
	}
	WISHBONE_MASTER_IF(wb_master_if);
}
