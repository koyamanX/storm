#include "reservation_station.h"

module reservation_station {
	reservation_station_t reg rs0 = 0;
	reservation_station_t reg rs1 = 0;
	reservation_station_t reg rs2 = 0;
	reservation_station_t reg rs3 = 0;
	func_self rs0_free();
	func_self rs1_free();
	func_self rs2_free();
	func_self rs3_free();
	func_self dispatch_rs0_0();
	func_self dispatch_rs0_1();
	func_self dispatch_rs1_0();
	func_self dispatch_rs1_1();
	func_self dispatch_rs2_0();
	func_self dispatch_rs2_1();
	func_self dispatch_rs3_0();
	func_self dispatch_rs3_1();
	reg tag[3] = 0;

	func issue {
		reservation_station_t wire new_rs_entry;
		if(!flush) {
			new_rs_entry.Busy1 = Valid1;
			new_rs_entry.Busy0 = Valid0;
			new_rs_entry.Tag1 = 4'(tag + 1);
			new_rs_entry.Tag0 = 4'(tag);
			new_rs_entry.Op1 = Op1;
			new_rs_entry.Op0 = Op0;
			new_rs_entry.Vj1 = Vj1;
			new_rs_entry.Vj0 = Vj0;
			new_rs_entry.Vk1 = Vk1;
			new_rs_entry.Vk0 = Vk0;
			new_rs_entry.Qj1 = Qj1;
			new_rs_entry.Qj0 = Qj0;
			new_rs_entry.Qk1 = Qk1;
			new_rs_entry.Qk0 = Qk0;
			new_rs_entry.Dest1 = Dest1;
			new_rs_entry.Dest0 = Dest0;
			new_rs_entry.A1 = A1;
			new_rs_entry.A0 = A0;
			tag := tag + 2;
			/* TODO: fix size */
			return 4'(tag);
		}
		alt {
			rs0_free: rs0 := new_rs_entry;
			rs1_free: rs1 := new_rs_entry;
			rs2_free: rs2 := new_rs_entry;
			rs3_free: rs3 := new_rs_entry;
		}
	}
	if(!flush) {
		alt {
			rs3.Busy1 && (rs3.Qj1 == 6'b000000) && (rs3.Qk1 == 6'b000000): {
				dispatch_rs3_1();
			}
			rs2.Busy1 && (rs2.Qj1 == 6'b000000) && (rs2.Qk1 == 6'b000000): {
				dispatch_rs2_1();
			}
			rs1.Busy1 && (rs1.Qj1 == 6'b000000) && (rs1.Qk1 == 6'b000000): {
				dispatch_rs1_1();
			}
			rs0.Busy1 && (rs0.Qj1 == 6'b000000) && (rs0.Qk1 == 6'b000000): {
				dispatch_rs0_1();
			}
		}
		alt {
			rs3.Busy0 && (rs3.Qj0 == 6'b000000) && (rs3.Qk0 == 6'b000000): {
				dispatch_rs3_0();
			}
			rs2.Busy0 && (rs2.Qj0 == 6'b000000) && (rs2.Qk0 == 6'b000000): {
				dispatch_rs2_0();
			}
			rs1.Busy0 && (rs1.Qj0 == 6'b000000) && (rs1.Qk0 == 6'b000000): {
				dispatch_rs1_0();
			}
			rs0.Busy0 && (rs0.Qj0 == 6'b000000) && (rs0.Qk0 == 6'b000000): {
				dispatch_rs0_0();
			}
		}
	}
	func dispatch_rs0_0 {
		rs0.Busy0 := 0;
		dispatch0();
	}
	func dispatch_rs0_1 {
		rs0.Busy1 := 0;
		dispatch1();
	}
	func dispatch_rs1_0 {
		rs1.Busy0 := 0;
		dispatch0();
	}
	func dispatch_rs1_1 {
		rs1.Busy1 := 0;
		dispatch1();
	}
	func dispatch_rs2_0 {
		rs2.Busy0 := 0;
		dispatch0();
	}
	func dispatch_rs2_1 {
		rs2.Busy1 := 0;
		dispatch1();
	}
	func dispatch_rs3_0 {
		rs3.Busy0 := 0;
		dispatch0();
	}
	func dispatch_rs3_1 {
		rs3.Busy1 := 0;
		dispatch1();
	}
	func CDB0 {
		if(!flush) {
			any {
				(rs3.Qj1 == CDB0Id) && rs3.Busy1: {rs3.Vj1 := CDB0Val; rs3.Qj1 := 0;}
				(rs3.Qj0 == CDB0Id) && rs3.Busy0: {rs3.Vj0 := CDB0Val; rs3.Qj0 := 0;}
				(rs3.Qk1 == CDB0Id) && rs3.Busy1: {rs3.Vk1 := CDB0Val; rs3.Qk1 := 0;}
				(rs3.Qk0 == CDB0Id) && rs3.Busy0: {rs3.Vk0 := CDB0Val; rs3.Qk0 := 0;}
				(rs2.Qj1 == CDB0Id) && rs2.Busy1: {rs2.Vj1 := CDB0Val; rs2.Qj1 := 0;}
				(rs2.Qj0 == CDB0Id) && rs2.Busy0: {rs2.Vj0 := CDB0Val; rs2.Qj0 := 0;}
				(rs2.Qk1 == CDB0Id) && rs2.Busy1: {rs2.Vk1 := CDB0Val; rs2.Qk1 := 0;}
				(rs2.Qk0 == CDB0Id) && rs2.Busy0: {rs2.Vk0 := CDB0Val; rs2.Qk0 := 0;}
				(rs1.Qj1 == CDB0Id) && rs1.Busy1: {rs1.Vj1 := CDB0Val; rs1.Qj1 := 0;}
				(rs1.Qj0 == CDB0Id) && rs1.Busy0: {rs1.Vj0 := CDB0Val; rs1.Qj0 := 0;}
				(rs1.Qk1 == CDB0Id) && rs1.Busy1: {rs1.Vk1 := CDB0Val; rs1.Qk1 := 0;}
				(rs1.Qk0 == CDB0Id) && rs1.Busy0: {rs1.Vk0 := CDB0Val; rs1.Qk0 := 0;}
				(rs0.Qj1 == CDB0Id) && rs0.Busy1: {rs0.Vj1 := CDB0Val; rs0.Qj1 := 0;}
				(rs0.Qj0 == CDB0Id) && rs0.Busy0: {rs0.Vj0 := CDB0Val; rs0.Qj0 := 0;}
				(rs0.Qk1 == CDB0Id) && rs0.Busy1: {rs0.Vk1 := CDB0Val; rs0.Qk1 := 0;}
				(rs0.Qk0 == CDB0Id) && rs0.Busy0: {rs0.Vk0 := CDB0Val; rs0.Qk0 := 0;}
			}
		}
	}
	func CDB1 {
		if(!flush) {
			any {
				(rs3.Qj1 == CDB1Id) && rs3.Busy1: {rs3.Vj1 := CDB1Val; rs3.Qj1 := 0;}
				(rs3.Qj0 == CDB1Id) && rs3.Busy0: {rs3.Vj0 := CDB1Val; rs3.Qj0 := 0;}
				(rs3.Qk1 == CDB1Id) && rs3.Busy1: {rs3.Vk1 := CDB1Val; rs3.Qk1 := 0;}
				(rs3.Qk0 == CDB1Id) && rs3.Busy0: {rs3.Vk0 := CDB1Val; rs3.Qk0 := 0;}
				(rs2.Qj1 == CDB1Id) && rs2.Busy1: {rs2.Vj1 := CDB1Val; rs2.Qj1 := 0;}
				(rs2.Qj0 == CDB1Id) && rs2.Busy0: {rs2.Vj0 := CDB1Val; rs2.Qj0 := 0;}
				(rs2.Qk1 == CDB1Id) && rs2.Busy1: {rs2.Vk1 := CDB1Val; rs2.Qk1 := 0;}
				(rs2.Qk0 == CDB1Id) && rs2.Busy0: {rs2.Vk0 := CDB1Val; rs2.Qk0 := 0;}
				(rs1.Qj1 == CDB1Id) && rs1.Busy1: {rs1.Vj1 := CDB1Val; rs1.Qj1 := 0;}
				(rs1.Qj0 == CDB1Id) && rs1.Busy0: {rs1.Vj0 := CDB1Val; rs1.Qj0 := 0;}
				(rs1.Qk1 == CDB1Id) && rs1.Busy1: {rs1.Vk1 := CDB1Val; rs1.Qk1 := 0;}
				(rs1.Qk0 == CDB1Id) && rs1.Busy0: {rs1.Vk0 := CDB1Val; rs1.Qk0 := 0;}
				(rs0.Qj1 == CDB1Id) && rs0.Busy1: {rs0.Vj1 := CDB1Val; rs0.Qj1 := 0;}
				(rs0.Qj0 == CDB1Id) && rs0.Busy0: {rs0.Vj0 := CDB1Val; rs0.Qj0 := 0;}
				(rs0.Qk1 == CDB1Id) && rs0.Busy1: {rs0.Vk1 := CDB1Val; rs0.Qk1 := 0;}
				(rs0.Qk0 == CDB1Id) && rs0.Busy0: {rs0.Vk0 := CDB1Val; rs0.Qk0 := 0;}
			}
		}
	}

	func flush {
		rs3 := 0;
		rs2 := 0;
		rs1 := 0;
		rs0 := 0;
		tag := 0;
	}
	if(!flush && (!rs3_free && !rs2_free && !rs1_free && !rs0_free)) {
		full();
	}
	any {
		((!rs3.Busy0 || dispatch_rs3_0) && (!rs3.Busy1 || dispatch_rs3_1)): rs3_free();
		((!rs2.Busy0 || dispatch_rs2_0) && (!rs2.Busy1 || dispatch_rs2_1)): rs2_free();
		((!rs1.Busy0 || dispatch_rs1_0) && (!rs1.Busy1 || dispatch_rs1_1)): rs1_free();
		((!rs0.Busy0 || dispatch_rs0_0) && (!rs0.Busy1 || dispatch_rs0_1)): rs0_free();
	}
}
