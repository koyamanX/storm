#include "instruction_decoder.h"
#include "inst.h"
#include "opcode_map.h"

module instruction_decoder {
	func_self decode_inst0();
	func_self decode_inst1();

	func decode {
		decode_inst0();
		decode_inst1();
	}
	func decode_inst0 {
		wire inst0_opcode[7];
		r_type_t wire inst0_rtype;

		inst0_opcode = inst0[6:0];
		inst0_rtype = inst0;
		any {
			inst0_opcode == OP: {
				uops0_alu({inst0_rtype.funct7[5], inst0_rtype.funct3}, inst0_rtype.rd, inst0_rtype.rs1, inst0_rtype.rs2, 0);
			}
		}
	}
	func decode_inst1 {
		wire inst1_opcode[7];
		r_type_t wire inst1_rtype;

		inst1_opcode = inst1[6:0];
		inst1_rtype = inst1;
		any {
			inst1_opcode == OP: {
				uops1_alu({inst1_rtype.funct7[5], inst1_rtype.funct3}, inst1_rtype.rd, inst1_rtype.rs1, inst1_rtype.rs2, 0);
			}
		}
	}
}
