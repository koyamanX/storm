#include "wishbone_slave.h"
#include "wishbone_common.h"
#include "rom64x2K.h"

module rom64x2K {
    wishbone_slave wb_slave_if;
    mem rom0[2048][32] = {
        0x300272f3,               //0x00: csrrci  t0,mstatus,4
        0x02830313,               //0x08: addi    t1,t1,40 # 2c <_trap>
        0x3051f073,               //0x10: csrci   mtvec,3
        0x34131073,               //0x18: csrw    mepc,t1
        0x00000293,               //0x20: li      t0,0
        0x30200073                //0x28: mret
    };
    mem rom1[2048][32] = {
        0x00000317,               //0x04: auipc   t1,0x0
        0x30531073,               //0x0c: csrw    mtvec,t1
        0x80000337,               //0x14: lui     t1,0x80000
        0x30029073,               //0x1c: csrw    mstatus,t0
        0x00000313,               //0x24: li      t1,0
        0x0x00006f                //0x2c: j       2c <_trap>
    };

    func reset {
        wb_slave_if.reset();
    }
    func wb_slave_if.req_read {
        wire b7[8];
        wire b6[8];
        wire b5[8];
        wire b4[8];
        wire b3[8];
        wire b2[8];
        wire b1[8];
        wire b0[8];

        any {
            wb_slave_if.req_sel[7]: b7 = rom1[wb_slave_if.req_addr[13:3]][31:24];
            wb_slave_if.req_sel[6]: b6 = rom1[wb_slave_if.req_addr[13:3]][23:16];
            wb_slave_if.req_sel[5]: b5 = rom1[wb_slave_if.req_addr[13:3]][15:8];
            wb_slave_if.req_sel[4]: b4 = rom1[wb_slave_if.req_addr[13:3]][7:0];
            wb_slave_if.req_sel[3]: b3 = rom0[wb_slave_if.req_addr[13:3]][31:24];
            wb_slave_if.req_sel[2]: b2 = rom0[wb_slave_if.req_addr[13:3]][23:16];
            wb_slave_if.req_sel[1]: b1 = rom0[wb_slave_if.req_addr[13:3]][15:8];
            wb_slave_if.req_sel[0]: b0 = rom0[wb_slave_if.req_addr[13:3]][7:0];
        }

        wb_slave_if.rsp_valid ({
            b7, b6, b5, b4, b3, b2, b1, b0
        });
    }
    func wb_slave_if.req_write {
        wb_slave_if.rsp_valid(0);
    }
    WISHBONE_SLAVE_IF(wb_slave_if);
}
